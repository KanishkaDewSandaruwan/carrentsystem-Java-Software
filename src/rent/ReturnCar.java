/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package rent;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author kaniya
 */
public class ReturnCar extends javax.swing.JFrame {

    /**
     * Creates new form CarReg
     */
    public ReturnCar() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH); 
//        txtDueDate.setDateFormatString("yyyy/MM/dd");
//        txtDate.setDateFormatString("yyyy/MM/dd");
        autoId();
        get_table();
        get_table_Returned();



        txtCusName.setEnabled(false);
        txtDueDate.setEnabled(false);
        txtTotle.setEnabled(false);
        txtPaid.setEnabled(false);
        txtBalance.setEnabled(false);
        txtDate.setEnabled(false);
        txtDueDate.setEnabled(false);
        btnAdd2.setEnabled(false);
        txtCarFee.setEnabled(false);
        
        txtRentId.setEnabled(false);
        txtReturnDate.setEnabled(false);
        txtEdate.setEnabled(false);
        txtEAmount.setEnabled(false);
        txtTAmount.setEnabled(false);
        txtPAmount.setEnabled(false);
        txtPayment.setEnabled(false);
        comboFinish.setEnabled(false);
        
        
    }
    
    Connection con;
    PreparedStatement pst;
    PreparedStatement ps;
    PreparedStatement ps1;
   
      

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
   
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtRentID = new javax.swing.JTextField();
        txtCusName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtDueDate = new javax.swing.JTextField();
        txtTotle = new javax.swing.JTextField();
        txtPaid = new javax.swing.JTextField();
        btnCancel = new javax.swing.JButton();
        txtBalance = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnAdd2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtCarNumber = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        txtCarFee = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtRentId = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtReturnDate = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtEdate = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtEAmount = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtTAmount = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtPAmount = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtPayment = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        comboFinish = new javax.swing.JComboBox<>();
        CarID = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        table3 = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        table2 = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 0, 0));
        jLabel2.setText("Rent ID");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 0, 0));
        jLabel4.setText("Customer Name");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 0, 0));
        jLabel5.setText("Need to Pay");

        txtRentID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRentIDKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 0, 0));
        jLabel6.setText("Car Fee Per(hr)");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(204, 0, 0));
        jLabel7.setText("Due Date");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 0, 0));
        jLabel8.setText("Totle Fee");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(204, 0, 0));
        jLabel9.setText("Paid Amount");

        txtDueDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDueDateActionPerformed(evt);
            }
        });

        txtPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPaidActionPerformed(evt);
            }
        });
        txtPaid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPaidKeyPressed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(0, 0, 0));
        btnCancel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCancel.setForeground(new java.awt.Color(255, 255, 255));
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(204, 0, 0));
        jLabel11.setText("Date");

        btnAdd2.setBackground(new java.awt.Color(0, 0, 0));
        btnAdd2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnAdd2.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd2.setText("Return Car");
        btnAdd2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdd2ActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(204, 0, 0));
        jLabel12.setText("Car Number");

        txtCarNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarNumberActionPerformed(evt);
            }
        });
        txtCarNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCarNumberKeyPressed(evt);
            }
        });

        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        txtCarFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarFeeActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Rent ID");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel13.setText("Returned Date");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Elips Dates");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("Elips Amount");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setText("Totle Amount");

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel17.setText("Paid Amount");

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("Payment Balance");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("Finish");

        comboFinish.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Yes", "No" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtTAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtEdate, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtRentId, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(122, 122, 122))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)
                                .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDate))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel19)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtTotle, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel12)
                                            .addComponent(jLabel2))
                                        .addGap(44, 44, 44)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtCarNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRentID, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtCusName))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCarFee, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(CarID, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(txtPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRentID, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtCarNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtCusName, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCarFee, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CarID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtTotle, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRentId, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEdate, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboFinish, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnAdd2, javax.swing.GroupLayout.DEFAULT_SIZE, 52, Short.MAX_VALUE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 51));
        jLabel1.setText("Return Car - Admin");

        table3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rent ID", "Returned Date", "Elips Date Numbers", "Elips Amount", "Last Totle Amount", "Paid Amount", "Last Balance", "Finished", "Car Number", "Car Od"
            }
        ));
        table3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table3MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table3);

        table2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rent ID", "Car ID", "Customer ID", "Customer Name", "Car Fee", "Due Date", "Date", "Totlr Fee", "Paid Amount", "Balance", "Car Number", "Extend"
            }
        ));
        table2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table2MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table2);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setText("Rented List");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel20)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1117, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 23, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        Main m = new Main();
        this.hide();
        m.setVisible(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void table3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table3MouseClicked
       
        
    }//GEN-LAST:event_table3MouseClicked

    private void txtDueDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDueDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDueDateActionPerformed

    private void btnAdd2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdd2ActionPerformed
        
        
        PreparedStatement ps;
        PreparedStatement pb;
       
            String RentID = txtRentID.getText();
            String carnum = txtCarNumber.getText();
            String carid = CarID.getText();
        
            String ReturnID = txtRentId.getText();
            String returnDate = txtReturnDate.getText();
            String Edate = txtEdate.getText();
            String EAamount = txtEAmount.getText();
            String TAamount = txtTAmount.getText();
            String PAmount = txtPAmount.getText();
            String Payment = txtPayment.getText();
            String finish = comboFinish.getSelectedItem().toString();     
              

                 try {

                        Class.forName("com.mysql.jdbc.Driver");
                        con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/carrent","root","");
                        
                        pst = (PreparedStatement) con.prepareStatement("insert into return_car(return_id,returned_date,e_date_numbers,e_amount,t_amount,paid_amount,balance,finished,car_number,car_id) values(?,?,?,?,?,?,?,?,?,?)");
                        pst.setString(1, ReturnID);
                        pst.setString(2, returnDate);
                        pst.setString(3, Edate);
                        pst.setString(4, EAamount);
                        pst.setString(5, TAamount);
                        pst.setString(6, PAmount);
                        pst.setString(7, Payment);
                        pst.setString(8, finish);
                        pst.setString(9, carnum);
                        pst.setString(10, carid);
                        

                        
                        ps1 = (PreparedStatement) con.prepareStatement("update carreg set available=? where car_number=?");
                        ps1.setString(1, "Yes");
                        ps1.setString(2, carnum);
                        
                        
                        ps = (PreparedStatement) con.prepareStatement("delete from rent where rent_id = ?");
                        ps.setString(1, RentID);
                        
                        ps.executeUpdate();
                        pst.executeUpdate();
                        ps1.executeUpdate();
                        
                        JOptionPane.showMessageDialog(this, "Car Returned Success");
                        
                        
                        txtRentID.setText("");
                        txtCarNumber.setText("");
                        txtCusName.setText("");
                        txtCarFee.setText("");
                        txtDueDate.setText("");
                        txtDate.setText("");
                        txtTotle.setText("");
                        txtPaid.setText("");
                        txtBalance.setText("");

                        txtReturnDate.setText("");
                        txtEdate.setText("");
                        txtEAmount.setText("");
                        txtTAmount.setText("");
                        txtPAmount.setText("");
                        txtPayment.setText("");
                        
                        CarID.setText("");
                        
                        autoId();
                        get_table();
                        get_table_Returned();
                        

                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(CarReg.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (SQLException ex) {
                        Logger.getLogger(CarReg.class.getName()).log(Level.SEVERE, null, ex);
                    }
            
    }//GEN-LAST:event_btnAdd2ActionPerformed

    private void txtCarNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarNumberActionPerformed

    private void txtPaidKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPaidKeyPressed

          if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            String totle = txtTotle.getText();
            String paid = txtPaid.getText();

            int conTotle = Integer.parseInt(totle);
            int conPaid = Integer.parseInt(paid);

            int balance = conTotle - conPaid;

            txtBalance.setText(String.valueOf(balance));
            btnAdd2.setEnabled(true);
        }  
    }//GEN-LAST:event_txtPaidKeyPressed

    private void txtRentIDKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRentIDKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            String Rent_id = txtRentID.getText();
            
            try {
                Class.forName("com.mysql.jdbc.Driver");
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/carrent","root","");
                ps = (PreparedStatement) con.prepareStatement("select * from rent where rent_id = ?");
                ps.setString(1, Rent_id);
                
                ps1 = (PreparedStatement) con.prepareStatement("select totle_fee,paid_amount,DATEDIFF(NOW(),due_date) as elpss from rent where rent_id = ?");
                ps1.setString(1, Rent_id);
                
                ResultSet r = ps.executeQuery();
                ResultSet rs = ps1.executeQuery();
                
                if (r.next() == false) {
                    JOptionPane.showMessageDialog(this, "Your Rent is Not Available");
                    txtCusName.setText("");
                    txtCarNumber.setText("");
                    txtCusName.setText("");
                    txtCarFee.setText("");
                    txtDueDate.setText("");
                    txtDate.setText("");
                    txtTotle.setText("");
                    txtPaid.setText("");
                    txtBalance.setText("");
                    
                    txtReturnDate.setText("");
                    txtEdate.setText("");
                    txtEAmount.setText("");
                    txtTAmount.setText("");
                    txtPAmount.setText("");
                    txtPayment.setText("");
                    
                    txtCusName.setEnabled(false);
                    txtDueDate.setEnabled(false);
                    txtTotle.setEnabled(false);
                    txtPaid.setEnabled(false);
                    txtBalance.setEnabled(false);
                    txtDate.setEnabled(false);
                    txtDueDate.setEnabled(false);
                    btnAdd2.setEnabled(false);
                    txtCarFee.setEnabled(false);

                    txtRentId.setEnabled(false);
                    txtReturnDate.setEnabled(false);
                    txtEdate.setEnabled(false);
                    txtEAmount.setEnabled(false);
                    txtTAmount.setEnabled(false);
                    txtPAmount.setEnabled(false);
                    txtPayment.setEnabled(false);
                    comboFinish.setEnabled(false);
                    
                    
                }else{
                    
                    txtCusName.setEnabled(true);
                    txtTotle.setEnabled(true);
                    txtPaid.setEnabled(true);
                    txtBalance.setEnabled(true);
                    txtDate.setEnabled(true);
                    txtDueDate.setEnabled(true);
                    btnAdd2.setEnabled(true);
                    txtCarNumber.setEnabled(true);
                    txtCarFee.setEnabled(true);

                    txtRentId.setEnabled(true);
                    txtReturnDate.setEnabled(true);
                    txtEdate.setEnabled(true);
                    txtEAmount.setEnabled(true);
                    txtTAmount.setEnabled(true);
                    txtPAmount.setEnabled(true);
                    txtPayment.setEnabled(true);
                    comboFinish.setEnabled(true);
                    
                    
                    String CarNumber = r.getString("car_number");
                    txtCarNumber.setText(CarNumber.trim());
                    
                    String CusName = r.getString("customer_name");
                    txtCusName.setText(CusName.trim());
                    
                    String CarFee = r.getString("car_fee");
                    txtCarFee.setText(CarFee.trim());
                    
                    String DueDate = r.getString("due_date");
                    txtDueDate.setText(DueDate.trim());
                    
                    String Date = r.getString("trn_date");
                    txtDate.setText(Date.trim());
                    
                    String Totle = r.getString("totle_fee");
                    txtTotle.setText(Totle.trim());
                    
                    String Paid = r.getString("paid_amount");
                    txtPaid.setText(Paid.trim());
                    
                    String Balance = r.getString("balance");
                    txtBalance.setText(Balance.trim());
                    
                    String car_id = r.getString("car_id");
                    CarID.setText(car_id.trim());
                    
                    if (rs.next() == false) {
                        JOptionPane.showMessageDialog(this, "Your Rent is Not Available");
                    }else{
                         
                        String elps = rs.getString("elpss");
                        int el = Integer.parseInt(elps);
                        
                        if (el >= 0) {
                            
                            Date date = new Date();  
                            SimpleDateFormat formatter = new SimpleDateFormat("yyyy.MM.dd");  
                            String cdate = formatter.format(date);
                            
                            txtReturnDate.setText(cdate);
                            
                            txtEdate.setText(elps.trim());
                            
                            int countEl = countElps(el,Integer.parseInt(CarFee));
                            txtEAmount.setText(String.valueOf(countEl));
                            
                            String TAmount = rs.getString("totle_fee");
                            int LastTotle = countLastTotle(countEl,Integer.parseInt(TAmount));
                            txtTAmount.setText(String.valueOf(LastTotle));

                            String PAmount = rs.getString("paid_amount");
                            txtPAmount.setText(PAmount.trim());
                            
                            int out = countTotle(LastTotle, Integer.parseInt(PAmount));
                            txtPayment.setText(String.valueOf(out));
                            
                            
                            
                        }else{

                            Date date = new Date();  
                            SimpleDateFormat formatter = new SimpleDateFormat("yyyy.MM.dd");  
                            String cdate = formatter.format(date);
                            
                            txtReturnDate.setText(cdate);
                            txtEdate.setText("0");
                            txtEAmount.setText("0");
                            
                            
                            String TAmount = rs.getString("totle_fee");
                            txtTAmount.setText(TAmount.trim());

                            String PAmount = rs.getString("paid_amount");
                            txtPAmount.setText(PAmount.trim());
                            
                            int out = countTotle(Integer.parseInt(TAmount), Integer.parseInt(PAmount));
                            txtPayment.setText(String.valueOf(out));
                        }

                    }

                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RentCar.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(RentCar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
    }//GEN-LAST:event_txtRentIDKeyPressed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void txtCarFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarFeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarFeeActionPerformed

    private void txtCarNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCarNumberKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
            String car_number = txtCarNumber.getText();
            
            try {
                Class.forName("com.mysql.jdbc.Driver");
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/carrent","root","");
                ps = (PreparedStatement) con.prepareStatement("select * from rent where car_number = ?");
                ps.setString(1, car_number);
                
                ps1 = (PreparedStatement) con.prepareStatement("select totle_fee,paid_amount,DATEDIFF(NOW(),due_date) as elpss from rent where car_number = ?");
                ps1.setString(1, car_number);
                
                ResultSet r = ps.executeQuery();
                ResultSet rs = ps1.executeQuery();
                
                if (r.next() == false) {
                    JOptionPane.showMessageDialog(this, "Your Rent is Not Available");
                    txtCusName.setText("");
                    txtRentID.setText("");
                    txtCusName.setText("");
                    txtCarFee.setText("");
                    txtDueDate.setText("");
                    txtDate.setText("");
                    txtTotle.setText("");
                    txtPaid.setText("");
                    txtBalance.setText("");
                    
                    txtReturnDate.setText("");
                    txtEdate.setText("");
                    txtEAmount.setText("");
                    txtTAmount.setText("");
                    txtPAmount.setText("");
                    txtPayment.setText("");
                    
                    txtCusName.setEnabled(false);
                    txtDueDate.setEnabled(false);
                    txtTotle.setEnabled(false);
                    txtPaid.setEnabled(false);
                    txtBalance.setEnabled(false);
                    txtDate.setEnabled(false);
                    txtDueDate.setEnabled(false);
                    btnAdd2.setEnabled(false);
                    txtCarFee.setEnabled(false);

                    txtRentId.setEnabled(false);
                    txtReturnDate.setEnabled(false);
                    txtEdate.setEnabled(false);
                    txtEAmount.setEnabled(false);
                    txtTAmount.setEnabled(false);
                    txtPAmount.setEnabled(false);
                    txtPayment.setEnabled(false);
                    comboFinish.setEnabled(false);
                    
                    
                }else{
                    
                    txtCusName.setEnabled(true);
                    txtTotle.setEnabled(true);
                    txtPaid.setEnabled(true);
                    txtBalance.setEnabled(true);
                    txtDate.setEnabled(true);
                    txtDueDate.setEnabled(true);
                    btnAdd2.setEnabled(true);
                    txtCarNumber.setEnabled(true);
                    txtCarFee.setEnabled(true);

                    txtRentId.setEnabled(true);
                    txtReturnDate.setEnabled(true);
                    txtEdate.setEnabled(true);
                    txtEAmount.setEnabled(true);
                    txtTAmount.setEnabled(true);
                    txtPAmount.setEnabled(true);
                    txtPayment.setEnabled(true);
                    comboFinish.setEnabled(true);
                    
                    
                    String RentID = r.getString("rent_id");
                    txtRentID.setText(RentID.trim());
                    
                    String CusName = r.getString("customer_name");
                    txtCusName.setText(CusName.trim());
                    
                    String CarFee = r.getString("car_fee");
                    txtCarFee.setText(CarFee.trim());
                    
                    String DueDate = r.getString("due_date");
                    txtDueDate.setText(DueDate.trim());
                    
                    String Date = r.getString("trn_date");
                    txtDate.setText(Date.trim());
                    
                    String Totle = r.getString("totle_fee");
                    txtTotle.setText(Totle.trim());
                    
                    String Paid = r.getString("paid_amount");
                    txtPaid.setText(Paid.trim());
                    
                    String Balance = r.getString("balance");
                    txtBalance.setText(Balance.trim());
                    
                    String car_id = r.getString("car_id");
                    CarID.setText(car_id.trim());
                    
                    if (rs.next() == false) {
                        JOptionPane.showMessageDialog(this, "Your Rent is Not Available");
                    }else{
                         
                        String elps = rs.getString("elpss");
                        int el = Integer.parseInt(elps);
                        
                        if (el >= 0) {
                            
                            Date date = new Date();  
                            SimpleDateFormat formatter = new SimpleDateFormat("yyyy.MM.dd");  
                            String cdate = formatter.format(date);
                            
                            txtReturnDate.setText(cdate);
                            
                            txtEdate.setText(elps.trim());
                            
                            int countEl = countElps(el,Integer.parseInt(CarFee));
                            txtEAmount.setText(String.valueOf(countEl));
                            
                            String TAmount = rs.getString("totle_fee");
                            int LastTotle = countLastTotle(countEl,Integer.parseInt(TAmount));
                            txtTAmount.setText(String.valueOf(LastTotle));

                            String PAmount = rs.getString("paid_amount");
                            txtPAmount.setText(PAmount.trim());
                            
                            int out = countTotle(LastTotle, Integer.parseInt(PAmount));
                            txtPayment.setText(String.valueOf(out));
                            
                            
                            
                        }else{

                            Date date = new Date();  
                            SimpleDateFormat formatter = new SimpleDateFormat("yyyy.MM.dd");  
                            String cdate = formatter.format(date);
                            
                            txtReturnDate.setText(cdate);
                            txtEdate.setText("0");
                            txtEAmount.setText("0");
                            
                            
                            String TAmount = rs.getString("totle_fee");
                            txtTAmount.setText(TAmount.trim());

                            String PAmount = rs.getString("paid_amount");
                            txtPAmount.setText(PAmount.trim());
                            
                            int out = countTotle(Integer.parseInt(TAmount), Integer.parseInt(PAmount));
                            txtPayment.setText(String.valueOf(out));
                        }

                    }

                }
                
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(RentCar.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(RentCar.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
        }
        
        
        
    }//GEN-LAST:event_txtCarNumberKeyPressed

    private void table2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table2MouseClicked
       
        txtCusName.setEnabled(true);
        txtTotle.setEnabled(true);
        txtPaid.setEnabled(true);
        txtBalance.setEnabled(true);
        txtDate.setEnabled(true);
        txtDueDate.setEnabled(true);
        btnAdd2.setEnabled(true);
        txtCarNumber.setEnabled(true);
        txtCarFee.setEnabled(true);

        txtRentId.setEnabled(true);
        txtReturnDate.setEnabled(true);
        txtEdate.setEnabled(true);
        txtEAmount.setEnabled(true);
        txtTAmount.setEnabled(true);
        txtPAmount.setEnabled(true);
        txtPayment.setEnabled(true);
        comboFinish.setEnabled(true);
        
        int selectIndex;
        TableModel d1 = (DefaultTableModel)table2.getModel();
        selectIndex = table2.getSelectedRow();
        
        
        txtRentID.setText(d1.getValueAt(selectIndex, 0).toString());
        txtCarNumber.setText(d1.getValueAt(selectIndex, 10).toString());
        txtCusName.setText(d1.getValueAt(selectIndex, 3).toString());
        txtCarFee.setText(d1.getValueAt(selectIndex, 4).toString());
        txtDueDate.setText(d1.getValueAt(selectIndex, 5).toString());
        txtDate.setText(d1.getValueAt(selectIndex, 6).toString());
        txtTotle.setText(d1.getValueAt(selectIndex, 7).toString());
        txtPaid.setText(d1.getValueAt(selectIndex, 8).toString());
        txtBalance.setText(d1.getValueAt(selectIndex, 9).toString());
        CarID.setText(d1.getValueAt(selectIndex, 1).toString());
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/carrent","root","");
            ps1 = (PreparedStatement) con.prepareStatement("select car_fee,totle_fee,paid_amount,DATEDIFF(NOW(),due_date) as elpss from rent where car_number = ?");
            ps1.setString(1, d1.getValueAt(selectIndex, 10).toString());
            
            ResultSet rs = ps1.executeQuery();
            
            if (rs.next() == false) {
                JOptionPane.showMessageDialog(this, "Your Rent is Not Available");
            }else{

                String elps = rs.getString("elpss");
                int el = Integer.parseInt(elps);

                if (el >= 0) {

                    Date date = new Date();  
                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy.MM.dd");  
                    String cdate = formatter.format(date);

                    txtReturnDate.setText(cdate);

                    txtEdate.setText(elps.trim());
                    
                    String CarFee = rs.getString("car_fee");

                    int countEl = countElps(el,Integer.parseInt(CarFee));
                    txtEAmount.setText(String.valueOf(countEl));

                    String TAmount = rs.getString("totle_fee");
                    int LastTotle = countLastTotle(countEl,Integer.parseInt(TAmount));
                    txtTAmount.setText(String.valueOf(LastTotle));

                    String PAmount = rs.getString("paid_amount");
                    txtPAmount.setText(PAmount.trim());

                    int out = countTotle(LastTotle, Integer.parseInt(PAmount));
                    txtPayment.setText(String.valueOf(out));



                }else{

                    Date date = new Date();  
                    SimpleDateFormat formatter = new SimpleDateFormat("yyyy.MM.dd");  
                    String cdate = formatter.format(date);

                    txtReturnDate.setText(cdate);
                    txtEdate.setText("0");
                    txtEAmount.setText("0");


                    String TAmount = rs.getString("totle_fee");
                    txtTAmount.setText(TAmount.trim());

                    String PAmount = rs.getString("paid_amount");
                    txtPAmount.setText(PAmount.trim());

                    int out = countTotle(Integer.parseInt(TAmount), Integer.parseInt(PAmount));
                    txtPayment.setText(String.valueOf(out));
                }

            }
            
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReturnCar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ReturnCar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
                
                
                
        
    }//GEN-LAST:event_table2MouseClicked

    private void txtPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPaidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPaidActionPerformed

    
    public int countTotle(int totle, int paid){
        int fee = 0;
        fee = totle - paid;   
        return fee;
    }
    
    public int countElps(int el,int fee){
        int count = 0;
        int feeCount = 0;
        feeCount = fee +500;
        count = el * feeCount;
        return count;
    }
    
    public int countLastTotle(int countEl, int totle){
        int count = 0;
        
        count = countEl + totle;
        return count;
    }
    
    /**
     * @param args the command line arguments
     */
    public void get_table(){
        
        int c;
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/carrent","root","");
            pst = (PreparedStatement) con.prepareStatement("select * from rent");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rm = rs.getMetaData();
            c = rm.getColumnCount();
            DefaultTableModel df = (DefaultTableModel)table2.getModel();
            df.setRowCount(0);
            
            while (rs.next()){
                Vector vector = new Vector();
                
                for (int i = 0; i <= c; i++) {
                    vector.add(rs.getString("rent_id"));
                    vector.add(rs.getString("car_id"));
                    vector.add(rs.getString("customer_id"));
                    vector.add(rs.getString("customer_name"));
                    vector.add(rs.getString("car_fee"));
                    vector.add(rs.getString("due_date"));
                    vector.add(rs.getString("trn_date"));
                    vector.add(rs.getString("totle_fee"));
                    vector.add(rs.getString("paid_amount"));
                    vector.add(rs.getString("balance"));
                    vector.add(rs.getString("car_number"));
                    vector.add(rs.getString("extend"));
                }
                df.addRow(vector);
            }
            
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReturnCar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ReturnCar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }
    
        public void get_table_Returned(){
        
        int c;
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/carrent","root","");
            pst = (PreparedStatement) con.prepareStatement("select * from return_car");
            ResultSet rs = pst.executeQuery();
            
            ResultSetMetaData rm = rs.getMetaData();
            c = rm.getColumnCount();
            DefaultTableModel df = (DefaultTableModel)table3.getModel();
            df.setRowCount(0);
            
            while (rs.next()){
                Vector vector = new Vector();
                
                for (int i = 0; i <= c; i++) {
                    vector.add(rs.getString("return_id"));
                    vector.add(rs.getString("returned_date"));
                    vector.add(rs.getString("e_date_numbers"));
                    vector.add(rs.getString("e_amount"));
                    vector.add(rs.getString("t_amount"));
                    vector.add(rs.getString("paid_amount"));
                    vector.add(rs.getString("balance"));
                    vector.add(rs.getString("finished"));
                    vector.add(rs.getString("car_number"));
                    vector.add(rs.getString("car_id"));
                }
                df.addRow(vector);
            }
            
            
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ReturnCar.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ReturnCar.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }
    
    
    
   
    
    
    
    public void autoId(){
        try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/carrent","root","");
            Statement s = con.createStatement(); 
            
            ResultSet rs = s.executeQuery("select Max(return_id) from return_car");
            rs.next();
            rs.getString("Max(return_id)");
            
            if (rs.getString("Max(return_id)")==null) {
                txtRentId.setText("B0001");
            }
            else
            {
                long id = Long.parseLong(rs.getString("Max(return_id)").substring(2,rs.getString("Max(return_id)").length()));
                id++;
                txtRentId.setText("B0" + String.format("%03d", id));
            }
            
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(ReturnCar.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReturnCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReturnCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReturnCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReturnCar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ReturnCar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CarID;
    private javax.swing.JButton btnAdd2;
    private javax.swing.JButton btnCancel;
    private javax.swing.JComboBox<String> comboFinish;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable table2;
    private javax.swing.JTable table3;
    private javax.swing.JTextField txtBalance;
    private javax.swing.JTextField txtCarFee;
    private javax.swing.JTextField txtCarNumber;
    private javax.swing.JTextField txtCusName;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDueDate;
    private javax.swing.JTextField txtEAmount;
    private javax.swing.JTextField txtEdate;
    private javax.swing.JTextField txtPAmount;
    private javax.swing.JTextField txtPaid;
    private javax.swing.JTextField txtPayment;
    private javax.swing.JTextField txtRentID;
    private javax.swing.JTextField txtRentId;
    private javax.swing.JTextField txtReturnDate;
    private javax.swing.JTextField txtTAmount;
    private javax.swing.JTextField txtTotle;
    // End of variables declaration//GEN-END:variables
}
